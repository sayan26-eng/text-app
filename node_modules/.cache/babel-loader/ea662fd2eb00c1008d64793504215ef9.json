{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Sayan\\\\Desktop\\\\ReactJS\\\\textutils\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sayan\\\\Desktop\\\\ReactJS\\\\textutils\\\\src\\\\App.js\";\n//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n//import About from './components/About';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";*/\n\nfunction App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setAlert = _useState4[1];\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 2000);\n  };\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2B547E';\n      showAlert(\"Dark mode enable\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enable\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextUtils\",\n    mode: mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextForm, {\n    heading: \"Enter the text to analyze\",\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["Navbar","TextForm","Alert","React","useState","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["C:/Users/Sayan/Desktop/ReactJS/textutils/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n//import About from './components/About';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react'\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";*/\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert]= useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode=()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#2B547E';\n      showAlert(\"Dark mode enable\",\"success\");\n      document.title=\"TextUtils - Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode enable\",\"success\");\n      document.title=\"TextUtils - Light Mode\";\n    }\n  }\n  return (\n   <>\n<div className=\"container\">\n  {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          \n          </Route>\n        </Switch>*/}\n        <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <TextForm heading=\"Enter the text to analyze\" mode={mode}/>      \n</div>\n   </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC;AACA,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAG;EAAA,gBACWD,QAAQ,CAAC,OAAO,CAAC;IAAA;IAAlCE,IAAI;IAAEC,OAAO;EAAA,iBACKH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAhCI,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,SAAS,GAAC,SAAVA,SAAS,CAAEC,OAAO,EAACC,IAAI,EAAG;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,YAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACD,IAAMM,UAAU,GAAC,SAAXA,UAAU,GAAK;IACnB,IAAGT,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CT,SAAS,CAAC,kBAAkB,EAAC,SAAS,CAAC;MACvCM,QAAQ,CAACI,KAAK,GAAC,uBAAuB;IACxC,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CT,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;MACxCM,QAAQ,CAACI,KAAK,GAAC,wBAAwB;IACzC;EACF,CAAC;EACD,oBACC;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACH;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBASlB,oBAAC,MAAM;IAAC,KAAK,EAAG,WAAW;IAAC,IAAI,EAAEd,IAAK;IAAC,UAAU,EAAES,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACvE,oBAAC,QAAQ;IAAC,OAAO,EAAC,2BAA2B;IAAC,IAAI,EAAET,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACvD,CACA;AAEN;AAEA,eAAeD,GAAG"},"metadata":{},"sourceType":"module"}